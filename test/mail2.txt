[{"event":"inbound","ts":1437006794,"msg":{"raw_msg":"Received: from mail-ie0-f172.google.com (unknown [209.85.223.172])\n\tby ip-10-212-6-2 (Postfix) with ESMTPS id C3EC03806A1\n\tfor <919035295469@inbound.edulead.in>; Thu, 16 Jul 2015 00:33:13 +0000 (UTC)\nReceived: by iecuq6 with SMTP id uq6so45611004iec.2\n        for <919035295469@inbound.edulead.in>; Wed, 15 Jul 2015 17:33:13 -0700 (PDT)\nDKIM-Signature: v=1; a=rsa-sha256; c=relaxed\/relaxed;\n        d=gmail.com; s=20120113;\n        h=mime-version:in-reply-to:references:date:message-id:subject:from:to\n         :content-type;\n        bh=TMuIsZEldtreyuew1hRIYPWAPElkuUlGw\/eB+C8HRS0=;\n        b=wJZ\/9QpI9E762tGJoFAnHZrd1cLi+vLL2LGt9zw1P2rQMp4iNmy66MLi9KhOhwYKWn\n         w4TjeOCx7WmXOZm6yWUYg\/R3B6s\/yw7Lt79xeyti0QESazadcq8aT4ONrdGxDprEtmgE\n         jVvVOcIWbxGQiiqIxR8Wxh1KAhpnl1Xeqg58KxnBhmu3n2LDUQFIHEh+L\/6wwr8K2cCl\n         +UEYx91z8V6zv3DH2gzfSa2UhHcxHH3l5AQjTQ0ws6Dz8SmZBeT0VPjI15kxlApPDCjz\n         4Nxr0i80lQjDwE4vosq7Qy2nJxbUf0gKRvyiIJoTgBZWA\/SJ34GqI+WcNzX1sUDmcT3b\n         Uc2g==\nMIME-Version: 1.0\nX-Received: by 10.50.67.179 with SMTP id o19mr826041igt.63.1437006793001; Wed,\n 15 Jul 2015 17:33:13 -0700 (PDT)\nReceived: by 10.79.83.131 with HTTP; Wed, 15 Jul 2015 17:33:12 -0700 (PDT)\nReceived: by 10.79.83.131 with HTTP; Wed, 15 Jul 2015 17:33:12 -0700 (PDT)\nIn-Reply-To: <CABcqZbMZYpZ3-myCeUSudQTkLzm9CP4qorg1bED3rczVtXFkFQ@mail.gmail.com>\nReferences: <CABcqZbMZYpZ3-myCeUSudQTkLzm9CP4qorg1bED3rczVtXFkFQ@mail.gmail.com>\nDate: Thu, 16 Jul 2015 06:03:12 +0530\nMessage-ID: <CABcqZbNTAVUNajwt6NeBChcjyT=aq4JU60ek61qjeRT5-bKEDw@mail.gmail.com>\nSubject: Fwd: Project details\nFrom: Harish Murthy <harish.v.murthy@gmail.com>\nTo: 919035295469@inbound.edulead.in\nContent-Type: multipart\/mixed; boundary=047d7bdca610703e88051af3370b\n\n--047d7bdca610703e88051af3370b\nContent-Type: multipart\/alternative; boundary=047d7bdca610703e83051af33709\n\n--047d7bdca610703e83051af33709\nContent-Type: text\/plain; charset=UTF-8\n\n---------- Forwarded message ----------\nFrom: \"Harish Murthy\" <harish.v.murthy@gmail.com>\nDate: 14 Jul 2015 09:54\nSubject: Project details\nTo: \"Badari Prasad\" <badari.hp@gmail.com>\nCc:\n\nHi,\n\nYou will need to become familiar with\n\n1. Tornado - tornadoweb.org, pip install tornado\n2. Mandrill - mandrill.com, pip install mandrill\n3. Mongo - mongodb.org,(We use motor package, checkt pypi for details) pip\ninstall motor\n4. Redis - redis.io, (We use redis package), pip install redis\n5. Bootstrap - getbootstrap.com, bootsnipp.com for frontend\n\n\nMandrill account details - needed to configure inbound processing:\n\nusername - vidyatibng@gmail.com\npassword - Em4Projv!d\n\nRedis use is optional, if there is not much processing to be done, we can\ndirectly send using mandrill client\n\nCheck the code attached for starters.\napp.py - main file for server -  this shows how all the different things\ncome together\n__init__.py - this shows sessions management in tornado (may be needed only\nfor signup process)\n\nWe'll discuss further in future.\n\nRegards,\nHarish\n\n--047d7bdca610703e83051af33709\nContent-Type: text\/html; charset=UTF-8\nContent-Transfer-Encoding: quoted-printable\n\n<div class=3D\"gmail_quote\">---------- Forwarded message ----------<br>From:=\n &quot;Harish Murthy&quot; &lt;<a href=3D\"mailto:harish.v.murthy@gmail.com\"=\n>harish.v.murthy@gmail.com<\/a>&gt;<br>Date: 14 Jul 2015 09:54<br>Subject: P=\nroject details<br>To: &quot;Badari Prasad&quot; &lt;<a href=3D\"mailto:badar=\ni.hp@gmail.com\">badari.hp@gmail.com<\/a>&gt;<br>Cc: <br><br type=3D\"attribut=\nion\"><div dir=3D\"ltr\"><div><div><div><div><div><div><div>Hi,<br><br><\/div>Y=\nou will need to become familiar with <br><br><\/div>1. Tornado - <a href=3D\"=\nhttp:\/\/tornadoweb.org\" target=3D\"_blank\">tornadoweb.org<\/a>, pip install to=\nrnado<br><\/div>2. Mandrill - <a href=3D\"http:\/\/mandrill.com\" target=3D\"_bla=\nnk\">mandrill.com<\/a>, pip install mandrill<br><\/div>3. Mongo - <a href=3D\"h=\nttp:\/\/mongodb.org\" target=3D\"_blank\">mongodb.org<\/a>,(We use motor package,=\n checkt pypi for details) pip install motor<br><\/div>4. Redis - <a href=3D\"=\nhttp:\/\/redis.io\" target=3D\"_blank\">redis.io<\/a>, (We use redis package), pi=\np install redis<br><\/div>5. Bootstrap - <a href=3D\"http:\/\/getbootstrap.com\"=\n target=3D\"_blank\">getbootstrap.com<\/a>, <a href=3D\"http:\/\/bootsnipp.com\" t=\narget=3D\"_blank\">bootsnipp.com<\/a> for frontend<br><br><br><\/div><div>Mandr=\nill account details - needed to configure inbound processing:<br><br><\/div>=\n<div>username - <a href=3D\"mailto:vidyatibng@gmail.com\" target=3D\"_blank\">v=\nidyatibng@gmail.com<\/a><br><\/div><div>password - Em4Projv!d<br><br><\/div><d=\niv><\/div><div>Redis use is optional, if there is not much processing to be =\ndone, we can directly send using mandrill client<br><\/div><div><br>Check th=\ne code attached for starters.<br><\/div><div>app.py - main file for server -=\n=C2=A0 this shows how all the different things come together<br><\/div><div>=\n__init__.py - this shows sessions management in tornado (may be needed only=\n for signup process)<br><br><\/div><div>We&#39;ll discuss further in future.=\n<br><br><\/div><div>Regards,<br><\/div><div>Harish<br><\/div><div><br><\/div><\/=\ndiv>\n<\/div>\n\n--047d7bdca610703e83051af33709--\n--047d7bdca610703e88051af3370b\nContent-Type: text\/x-python; charset=US-ASCII; name=\"app.py\"\nContent-Disposition: attachment; filename=\"app.py\"\nContent-Transfer-Encoding: base64\nX-Attachment-Id: f_ic2twzkn0\n\nZnJvbSB0b3JuYWRvLmlvbG9vcCBpbXBvcnQgSU9Mb29wCmZyb20gdG9ybmFkby53ZWIgaW1wb3J0\nIGF1dGhlbnRpY2F0ZWQsIFN0YXRpY0ZpbGVIYW5kbGVyLCBIVFRQRXJyb3IKZnJvbSB0b3JuYWRv\nLmxvZyBpbXBvcnQgbG9nZ2luZywgZ2VuX2xvZwpmcm9tIHRvcm5hZG9fanNvbi5yb3V0ZXMgaW1w\nb3J0IGdldF9yb3V0ZXMKZnJvbSB0b3JuYWRvX2pzb24uYXBwbGljYXRpb24gaW1wb3J0IEFwcGxp\nY2F0aW9uCmZyb20gdG9ybmFkb19qc29uLmdlbiBpbXBvcnQgY29yb3V0aW5lCmZyb20gdG9ybmFk\nby5hdXRoIGltcG9ydCBHb29nbGVPQXV0aDJNaXhpbgpmcm9tIHRvcm5hZG8uaHR0cGNsaWVudCBp\nbXBvcnQgQXN5bmNIVFRQQ2xpZW50LCBIVFRQUmVzcG9uc2UsIEhUVFBSZXF1ZXN0CmltcG9ydCBh\ncGkKaW1wb3J0IGpzb24KaW1wb3J0IG1vdG9yCmltcG9ydCBzeXMKaW1wb3J0IHJlZGlzCgpjbGFz\ncyBHb29nbGVPQXV0aDJMb2dpbkhhbmRsZXIoYXBpLkJhc2VIYW5kbGVyLAogICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgR29vZ2xlT0F1dGgyTWl4aW4pOgogICAgQGNvcm91dGluZQogICAg\nZGVmIGdldChzZWxmKToKICAgICAgICBpZiBzZWxmLmdldF9hcmd1bWVudCgnY29kZScsIEZhbHNl\nKToKICAgICAgICAgIHVzZXIgPSB5aWVsZCBzZWxmLmdldF9hdXRoZW50aWNhdGVkX3VzZXIoCiAg\nICAgICAgICAgICAgcmVkaXJlY3RfdXJpPSdodHRwOi8vZWR1bGVhZC5pbi9hdXRoL2dvb2dsZScs\nCiAgICAgICAgICAgICAgY29kZT1zZWxmLmdldF9hcmd1bWVudCgnY29kZScpKQogICAgICAgICAg\nZ2VuX2xvZy5pbmZvKCdnb29nbGUgYWNjZXNzIHRva2VuICcgKyB1c2VyWydhY2Nlc3NfdG9rZW4n\nXSkKICAgICAgICAgIGh0dHBfY2xpZW50ID0gQXN5bmNIVFRQQ2xpZW50KCkKICAgICAgICAgIHJl\nc3BvbnNlID0geWllbGQgaHR0cF9jbGllbnQuZmV0Y2goJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMu\nY29tL3BsdXMvdjEvcGVvcGxlL21lP2FjY2Vzc190b2tlbj0nK3VzZXJbJ2FjY2Vzc190b2tlbidd\nLHJhaXNlX2Vycm9yPUZhbHNlKQogICAgICAgICAgaWYgcmVzcG9uc2UuY29kZSAhPSAyMDA6CiAg\nICAgICAgICAgIGdlbl9sb2cuaW5mbygnZXJyb3IgZ2V0dGluZyBwcm9maWxlICcgKyBzdHIocmVz\ncG9uc2UpKQogICAgICAgICAgICBzZWxmLnJlZGlyZWN0KCcvc2lnbmluJykKICAgICAgICAgIHJl\nc2RhdGEgPSBqc29uLmxvYWRzKHJlc3BvbnNlLmJvZHkuZGVjb2RlKCkpCiAgICAgICAgICBnZW5f\nbG9nLmluZm8oJ3Byb2ZpbGUgZGF0YSAnICsgc3RyKHJlc2RhdGEpKQogICAgICAgICAgdWRiID0g\nc2VsZi5zZXR0aW5nc1sndXNlcmRiJ10KICAgICAgICAgIGVtYWlsID0gc2VsZi5nZXRWYWx1ZSgn\nZW1haWwnKQogICAgICAgICAgaWYgbm90IGVtYWlsIG9yIGVtYWlsID09ICIiOgogICAgICAgICAg\nICBlbWFpbCA9IHJlc2RhdGFbJ2VtYWlscyddWzBdWyd2YWx1ZSddCiAgICAgICAgICBmb3VuZCA9\nIEZhbHNlCiAgICAgICAgICBmb3IgZSBpbiByZXNkYXRhWydlbWFpbHMnXToKICAgICAgICAgICAg\naWYgZVsndmFsdWUnXSA9PSBlbWFpbDoKICAgICAgICAgICAgICBmb3VuZCA9IFRydWUKICAgICAg\nICAgIGlmIGZvdW5kID09IEZhbHNlOgogICAgICAgICAgICBzZWxmLnJlZGlyZWN0KCcvc2lnbmlu\nJykKICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNlbGYuc2V0VmFsdWUoJ2VtYWlsJyxlbWFp\nbCkKICAgICAgICAgIGlmICdkaXNwbGF5TmFtZScgaW4gcmVzZGF0YToKICAgICAgICAgICAgc2Vs\nZi5zZXRWYWx1ZSgnbmFtZScscmVzZGF0YVsnZGlzcGxheU5hbWUnXSkKICAgICAgICAgIHVzZXIg\nPSAgeWllbGQgdWRiLnVzZXJzLmZpbmRfb25lKHsndXNlcmVtYWlsJzogZW1haWx9KQogICAgICAg\nICAgaWYgdXNlcjoKICAgICAgICAgICAgZ2VuX2xvZy5pbmZvKCdleGlzdGluZyB1c2VyICcgKyBl\nbWFpbCkKICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJlc2RhdGFbJ3VzZXJlbWFpbCddID0g\nZW1haWwKICAgICAgICAgICAgcmVzID0geWllbGQgdWRiLnVzZXJzLmluc2VydChyZXNkYXRhKQog\nICAgICAgICAgICBnZW5fbG9nLmluZm8oJ25ldyB1c2VyIGluc2VydGVkICcgKyBlbWFpbCkKICAg\nICAgICAgIHNlbGYudXNlcl9hdXRoZW50aWNhdGVkKCkKICAgICAgICAgIG5leHR1cmwgPSBzZWxm\nLmdldFZhbHVlKCduZXh0dXJsJykKICAgICAgICAgIGlmIG5vdCBuZXh0dXJsOgogICAgICAgICAg\nICBuZXh0dXJsID0gJy8nCiAgICAgICAgICBzZWxmLnJlZGlyZWN0KG5leHR1cmwpCgoKY2xhc3Mg\nTWFpbkhhbmRsZXIoYXBpLkJhc2VIYW5kbGVyKToKICBkZWYgZ2V0KHNlbGYpOgogICAgc2VsZi5y\nZW5kZXIoImluZGV4Lmh0bWwiKQoKY2xhc3MgU2VhcmNoUmVzdWx0c0hhbmRsZXIoYXBpLkJhc2VI\nYW5kbGVyKToKICBkZWYgZ2V0KHNlbGYpOgogICAgc2VsZi5yZW5kZXIoInNlYXJjaHJlc3VsdHNf\ndjIuaHRtbCIpCgpjbGFzcyBEYXNoQm9hcmRIYW5kbGVyKGFwaS5CYXNlSGFuZGxlcik6CiAgQGF1\ndGhlbnRpY2F0ZWQKICBkZWYgZ2V0KHNlbGYpOgogICAgc2VsZi5leHRlbmRzZXNzaW9uKCkKICAg\nIHNlbGYucmVuZGVyKCJkYXNoYm9hcmRfdjIuaHRtbCIpCgpjbGFzcyBQcm9maWxlSGFuZGxlcihh\ncGkuQmFzZUhhbmRsZXIpOgogIEBhdXRoZW50aWNhdGVkCiAgZGVmIGdldChzZWxmKToKICAgIHNl\nbGYuZXh0ZW5kc2Vzc2lvbigpCiAgICBzZWxmLnJlbmRlcigiY3VzdG9tZXJQcm9maWxlLmh0bWwi\nKQoKY2xhc3MgU2lnbmluSGFuZGxlcihhcGkuQmFzZUhhbmRsZXIsCiAgICAgICAgICAgICAgICAg\nICAgR29vZ2xlT0F1dGgyTWl4aW4pOgogIGRlZiBnZXQoc2VsZik6CiAgICBzZWxmLnJlbmRlcigi\nc2lnbmluLmh0bWwiKQoKICBAY29yb3V0aW5lCiAgZGVmIHBvc3Qoc2VsZik6CiAgICBncmVjYXB0\nY2hhcmVzcG9uc2UgPSBzZWxmLmdldF9hcmd1bWVudCgnZy1yZWNhcHRjaGEtcmVzcG9uc2UnKQog\nICAgZW1haWwgPSBzZWxmLmdldF9hcmd1bWVudCgnZW1haWwnKQogICAgbmV4dHVybCA9IHNlbGYu\nZ2V0X2FyZ3VtZW50KCduZXh0JywnLycpCiAgICBnZW5fbG9nLmluZm8oJ2VtYWlsICcgKyBlbWFp\nbCkKICAgIGdlbl9sb2cuaW5mbygnY2FwdGNoYSByZXNwb25zZSAnICsgZ3JlY2FwdGNoYXJlc3Bv\nbnNlKQogICAgZ2VuX2xvZy5pbmZvKCduZXh0IHVybCAnICsgbmV4dHVybCkKICAgIGlmIG5vdCBn\ncmVjYXB0Y2hhcmVzcG9uc2U6CiAgICAgIHNlbGYucmVkaXJlY3QoJy9zaWduaW4nKQogICAgcmVt\nb3RlaXAgPSBzZWxmLnJlcXVlc3QuaGVhZGVyc1snWC1SZWFsLUlQJ10KICAgIGdlbl9sb2cuaW5m\nbygncmVtb3RlIGlwICcgKyByZW1vdGVpcCkKICAgIGh0dHBfcmVxID0gSFRUUFJlcXVlc3QoJ2h0\ndHBzOi8vd3d3Lmdvb2dsZS5jb20vcmVjYXB0Y2hhL2FwaS9zaXRldmVyaWZ5JywnUE9TVCcsYm9k\neT0nc2VjcmV0PScrCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNldHRpbmdzWydy\nZWNhcHRjaGFfc2VjcmV0J10rJyZyZXNwb25zZT0nK2dyZWNhcHRjaGFyZXNwb25zZSsKICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICcmcmVtb3RlaXA9JytyZW1vdGVpcCkKICAgIGh0dHBfY2xp\nZW50ID0gQXN5bmNIVFRQQ2xpZW50KCkKICAgIHJlc3BvbnNlID0geWllbGQgaHR0cF9jbGllbnQu\nZmV0Y2goaHR0cF9yZXEscmFpc2VfZXJyb3I9RmFsc2UpCiAgICBpZiByZXNwb25zZS5jb2RlICE9\nIDIwMDoKICAgICAgZ2VuX2xvZy5pbmZvKCdlcnJvciByZXNwb25zZSBmcm9tIGNhcHRjaGEgJyAr\nIHN0cihyZXNwb25zZSkpCiAgICAgIHNlbGYucmVkaXJlY3QoJy9zaWduaW4nKQogICAgcmVzZGF0\nYSA9IGpzb24ubG9hZHMocmVzcG9uc2UuYm9keS5kZWNvZGUoKSkKICAgIGdlbl9sb2cuaW5mbygn\nZXJyb3IgcmVzcG9uc2UgZnJvbSBjYXB0Y2hhICcgKyBzdHIocmVzZGF0YSkpCiAgICBpZiByZXNk\nYXRhWydzdWNjZXNzJ10gIT0gVHJ1ZToKICAgICAgc2VsZi5yZWRpcmVjdCgnL3NpZ25pbicpCiAg\nICBzZWxmLnNldFZhbHVlKCdlbWFpbCcsZW1haWwpCiAgICBzZWxmLnNldFZhbHVlKCduZXh0dXJs\nJyxuZXh0dXJsKQogICAgcHJvdmlkZXIgPSBzZWxmLmdldF9hcmd1bWVudCgnbG9naW4nLCdHb29n\nbGUnKQogICAgaWYgcHJvdmlkZXIgPT0gJ0dvb2dsZSc6CiAgICAgIHlpZWxkIHNlbGYuYXV0aG9y\naXplX3JlZGlyZWN0KHJlZGlyZWN0X3VyaT0naHR0cDovL2VkdWxlYWQuaW4vYXV0aC9nb29nbGUn\nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGllbnRfaWQ9c2VsZi5zZXR0\naW5nc1snZ29vZ2xlX29hdXRoJ11bJ2tleSddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICBzY29wZT1bJ3Byb2ZpbGUnLCAnZW1haWwnXSwKICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgcmVzcG9uc2VfdHlwZT0nY29kZScsCiAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgIGV4dHJhX3BhcmFtcz17J2FwcHJvdmFsX3Byb21wdCc6ICdhdXRvJywg\nJ2xvZ2luX2hpbnQnOiBlbWFpbH0pCiAgICBlbHNlOgogICAgICBzZWxmLnJlZGlyZWN0KCcvc2ln\nbmluJykKCmNsYXNzIFNpZ25vdXRIYW5kbGVyKGFwaS5CYXNlSGFuZGxlcik6CiAgQGF1dGhlbnRp\nY2F0ZWQKICBkZWYgZ2V0KHNlbGYpOgogICAgc2VsZi5jbGVhcnNlc3Npb24oKQogICAgc2VsZi5y\nZWRpcmVjdCgiLyIpCgpsb2dnaW5nLmJhc2ljQ29uZmlnKHN0cmVhbT1zeXMuc3Rkb3V0LGxldmVs\nPWxvZ2dpbmcuREVCVUcpCgpjbGllbnQgPSBtb3Rvci5Nb3RvckNsaWVudCgpCnVzZXJkYiA9IGNs\naWVudC51c2VyZGIKcmNsaWVudCA9IHJlZGlzLlN0cmljdFJlZGlzKCkKCnNldHRpbmdzID0gewog\nICJsb2dpbl91cmwiOiAiL3NpZ25pbiIsCiAgInJlY2FwdGNoYV9zZWNyZXQiOiAnNkxlUHFna1RB\nQUFBQVBNaURsRk1yTjJvNTVxck5MNGF3R2V4cnlXbScsCiAgImdvb2dsZV9vYXV0aCI6IHsia2V5\nIjoiODgzMzcyMTE1MzAzLTZsM3R0amF1cDZwNWlnYmI1ODh2Mm5rcjM3aTZ0MmsxLmFwcHMuZ29v\nZ2xldXNlcmNvbnRlbnQuY29tIiwgInNlY3JldCI6ICItUTlGVEpOYjk1VlNtRndUWkxvQk1OcVQi\nfSwKICAiZmFjZWJvb2tfb2F1dGgiOiB7ImtleSI6ICJUQkQifSwKICAieHNyZl9jb29raWVzIjog\nRmFsc2UsCiAgImNvb2tpZV9zZWNyZXQiOiAnZGI2NzM0ZjM0ZGI2Nzc1ZTc5ZTNjNzdiNmY3ZGZh\nN2I5ZTFiN2Y4N2Y1ZWI0ZGZiJywKICAiZW1pbnMiOiAwLjAwNywKICAidXNlcmRiIjogdXNlcmRi\nLAogICJjb2dhbmx5c19hcHBfaWQiOiAiZDY0ODdkMjQ5OGZjNDllYWJlMTM1ZDAiLAogICJjb2du\nYWx5c19hY2NfdG9rZW4iOiAiM2M1ZjNmNDAwMzU1MmVkNWFiNTU1ZmRmMzM2Nzk5NjBmYmI5NDUy\nZCIsCiAgInJjbGllbnQiOiByY2xpZW50LAogICJhbm9ucXVvdGEiOiAxMDAsCiAgInN0YXRpY19w\nYXRoIjogIi4uLy4uL2Zyb250ZW5kLyIsCiAgInRlbXBsYXRlX3BhdGgiOiAiLi4vLi4vZnJvbnRl\nbmQvaHRtbC8iLAp9Cgpyb3V0ZXMgPSBnZXRfcm91dGVzKGFwaSkKCnJvdXRlcyA9IHJvdXRlcyAr\nIFsKIChyIi8iLCBNYWluSGFuZGxlciksCiAociIvYXV0aC9nb29nbGUiLCBHb29nbGVPQXV0aDJM\nb2dpbkhhbmRsZXIpLAogKHIiL3NlYXJjaHJlc3VsdHMiLCBTZWFyY2hSZXN1bHRzSGFuZGxlciks\nCiAociIvZGFzaGJvYXJkIiwgRGFzaEJvYXJkSGFuZGxlciksCiAociIvcHJvZmlsZSIsIFByb2Zp\nbGVIYW5kbGVyKSwKIChyIi9zaWdub3V0IiwgU2lnbm91dEhhbmRsZXIpLAogKHIiL3NpZ25pbiIs\nIFNpZ25pbkhhbmRsZXIpLAogKHIiLyguKikiLCBTdGF0aWNGaWxlSGFuZGxlcixkaWN0KHBhdGg9\nc2V0dGluZ3NbJ3N0YXRpY19wYXRoJ10pKSwKXQoKYXBwbGljYXRpb24gPSBBcHBsaWNhdGlvbihy\nb3V0ZXM9cm91dGVzLCBzZXR0aW5ncz1zZXR0aW5ncykKCmlmIF9fbmFtZV9fID09ICJfX21haW5f\nXyI6CiAgYXBwbGljYXRpb24ubGlzdGVuKDg5ODQpCiAgSU9Mb29wLmN1cnJlbnQoKS5zdGFydCgp\nCgo=\n--047d7bdca610703e88051af3370b\nContent-Type: text\/x-python; charset=US-ASCII; name=\"__init__.py\"\nContent-Disposition: attachment; filename=\"__init__.py\"\nContent-Transfer-Encoding: base64\nX-Attachment-Id: f_ic2u4fsr1\n\nZnJvbSB0b3JuYWRvLmxvZyBpbXBvcnQgZ2VuX2xvZwpmcm9tIHRvcm5hZG8ud2ViIGltcG9ydCBS\nZXF1ZXN0SGFuZGxlciwgSFRUUEVycm9yCmZyb20gdG9ybmFkb19qc29uLmdlbiBpbXBvcnQgY29y\nb3V0aW5lCmZyb20gdG9ybmFkb19qc29uLnJlcXVlc3RoYW5kbGVycyBpbXBvcnQgQVBJSGFuZGxl\ncgppbXBvcnQgZGF0ZXRpbWUKaW1wb3J0IHV1aWQKaW1wb3J0IHBpY2tsZQoKY2xhc3MgQmFzZUhh\nbmRsZXIoUmVxdWVzdEhhbmRsZXIpOgogIGRlZiBpbml0aWFsaXplKHNlbGYpOgogICAgc2VsZi5z\nZXNzaW9uaWQgPSBOb25lCgogIGRlZiBzZXRWYWx1ZShzZWxmLGtleSx2YWx1ZSk6CiAgICBnZW5f\nbG9nLmluZm8oJ3NldCAoJytzZWxmLnNlc3Npb25pZCtrZXkrJykgPSAnK3N0cih2YWx1ZSkpCiAg\nICByY2xpZW50ID0gc2VsZi5zZXR0aW5nc1sncmNsaWVudCddCiAgICBpZiBub3QgcmNsaWVudDoK\nICAgICAgcmV0dXJuIEZhbHNlCiAgICByZXR1cm4gcmNsaWVudC5zZXRleChzZWxmLnNlc3Npb25p\nZCtrZXksODY0MDAscGlja2xlLmR1bXBzKHZhbHVlKSkKCiAgZGVmIGdldFZhbHVlKHNlbGYsa2V5\nKToKICAgIHJjbGllbnQgPSBzZWxmLnNldHRpbmdzWydyY2xpZW50J10KICAgIGlmIG5vdCByY2xp\nZW50OgogICAgICByZXR1cm4gTm9uZQogICAgdmFsID0gcmNsaWVudC5nZXQoc2VsZi5zZXNzaW9u\naWQra2V5KQogICAgaWYgdmFsOgogICAgICB2YWwgPSBwaWNrbGUubG9hZHModmFsKQogICAgZ2Vu\nX2xvZy5pbmZvKCdnZXQgKCcrc2VsZi5zZXNzaW9uaWQra2V5KycpID0gJyArIHN0cih2YWwpKQog\nICAgcmV0dXJuIHZhbAoKICBkZWYgZGVsZXRlVmFsdWUoc2VsZixrZXkpOgogICAgZ2VuX2xvZy5p\nbmZvKCdkZWxldGUgKCcrc2VsZi5zZXNzaW9uaWQra2V5KycpJykKICAgIHJjbGllbnQgPSBzZWxm\nLnNldHRpbmdzWydyY2xpZW50J10KICAgIGlmIG5vdCByY2xpZW50OgogICAgICByZXR1cm4gTm9u\nZQogICAgcmV0dXJuIHJjbGllbnQuZGVsZXRlKHNlbGYuc2Vzc2lvbmlkK2tleSkKCiAgZGVmIGdl\ndF9zZXNzaW9uX2lkKHNlbGYpOgogICAgc2Vzc2lvbmlkID0gc2VsZi5nZXRfc2VjdXJlX2Nvb2tp\nZSgnVm5vdGUnKQogICAgaWYgc2Vzc2lvbmlkOgogICAgICBnZW5fbG9nLmluZm8oJ3NldCBzZXNz\naW9uaWQgZnJvbSBjb29raWUnKQogICAgICBzZWxmLnNlc3Npb25pZCA9IHNlc3Npb25pZC5kZWNv\nZGUoKQogICAgICBuYW1lID0gc2VsZi5nZXRWYWx1ZSgnbmFtZScpCiAgICAgIGlmIG5vdCBuYW1l\nOgogICAgICAgIHNlbGYuc2Vzc2lvbmlkID0gTm9uZQogICAgcmV0dXJuIHNlbGYuc2Vzc2lvbmlk\nCgogIGRlZiBnZXRfY3VycmVudF91c2VyKHNlbGYpOgogICAgc2Vzc2lvbmlkID0gc2VsZi5nZXRf\nc2Vzc2lvbl9pZCgpCiAgICBpZiBub3Qgc2Vzc2lvbmlkOgogICAgICByZXR1cm4gTm9uZQogICAg\nYXV0aCA9IHNlbGYuZ2V0VmFsdWUoJ2F1dGgnKQogICAgaWYgbm90IGF1dGggb3IgYXV0aCA9PSAi\nZmFsc2UiOgogICAgICByZXR1cm4gTm9uZQogICAgZW1haWwgPSBzZWxmLmdldFZhbHVlKCdlbWFp\nbCcpCiAgICBpZiBub3QgZW1haWw6CiAgICAgIHJldHVybiBOb25lCiAgICBleHBpcnkgPSBzZWxm\nLmdldFZhbHVlKCdleHBpcnl0aW1lJykKICAgIGlmIGV4cGlyeSBhbmQgZGF0ZXRpbWUuZGF0ZXRp\nbWUudXRjbm93KCkgPiBleHBpcnk6CiAgICAgIHJldHVybiBOb25lCiAgICBpZiBub3QgZXhwaXJ5\nOgogICAgICByZXR1cm4gTm9uZQogICAgcmV0dXJuIGVtYWlsCgogIGRlZiBwcmVwYXJlKHNlbGYp\nOgogICAgc2Vzc2lvbmlkID0gc2VsZi5nZXRfc2Vzc2lvbl9pZCgpCiAgICBpZiBub3Qgc2Vzc2lv\nbmlkOgogICAgICBzZWxmLmNyZWF0ZV9hbm9ueW1vdXNfdXNlcigpCiAgICAgIHJldHVybiBOb25l\nCiAgICBpZiBzZWxmLmdldF9hbm9ueW1vdXNfdXNlcigpOgogICAgICByZXFzID0gc2VsZi5nZXRW\nYWx1ZSgncmVxcycpCiAgICAgIHNlbGYuc2V0VmFsdWUoJ3JlcXMnLHJlcXMrMSkKICAgICAgcmV0\ndXJuIE5vbmUKICAgIGlmIG5vdCBzZWxmLmN1cnJlbnRfdXNlcjoKICAgICAgc2VsZi5jbGVhcnNl\nc3Npb24oKQogICAgICBzZWxmLnJlZGlyZWN0KCcvJykKCiAgZGVmIGdldF9hbm9ueW1vdXNfdXNl\ncihzZWxmKToKICAgIGlmIG5vdCBzZWxmLnNlc3Npb25pZDoKICAgICAgcmV0dXJuIEZhbHNlCiAg\nICBuYW1lID0gc2VsZi5nZXRWYWx1ZSgnbmFtZScpCiAgICBpZiBub3QgbmFtZSBvciBuYW1lICE9\nICJBbm9ueW1vdXMiOgogICAgICByZXR1cm4gRmFsc2UKICAgIGV4cGlyeSA9IHNlbGYuZ2V0VmFs\ndWUoJ2V4cGlyeXRpbWUnKQogICAgaWYgZXhwaXJ5IGFuZCBkYXRldGltZS5kYXRldGltZS51dGNu\nb3coKSA+IGV4cGlyeToKICAgICAgcmV0dXJuIEZhbHNlCiAgICBpZiBub3QgZXhwaXJ5OgogICAg\nICByZXR1cm4gRmFsc2UKICAgIHJlcXMgPSBzZWxmLmdldFZhbHVlKCdyZXFzJykKICAgIGlmIHJl\ncXMgYW5kIHJlcXMgPiBzZWxmLnNldHRpbmdzWydhbm9ucXVvdGEnXToKICAgICAgcmV0dXJuIEZh\nbHNlCiAgICBpZiByZXFzID09IE5vbmU6CiAgICAgIHJldHVybiBGYWxzZQogICAgcmV0dXJuIFRy\ndWUKCiAgZGVmIGNyZWF0ZV9hbm9ueW1vdXNfdXNlcihzZWxmKToKICAgIHNlbGYuc2Vzc2lvbmlk\nID0gc3RyKHV1aWQudXVpZDQoKSkKICAgIGdlbl9sb2cuaW5mbygnY3JlYXRpbmcgbmV3IHNlc3Np\nb24gJyArIHNlbGYuc2Vzc2lvbmlkKQogICAgc2VsZi5zZXRfc2VjdXJlX2Nvb2tpZSgnVm5vdGUn\nLHNlbGYuc2Vzc2lvbmlkLGV4cGlyZXNfZGF5cz1Ob25lLGV4cGlyZXM9Tm9uZSkKICAgIHNlbGYu\nc2V0X2Nvb2tpZSgnVnR5cGUnLCd1c2VyJyxleHBpcmVzX2RheXM9Tm9uZSxleHBpcmVzPU5vbmUp\nCiAgICBzZWxmLnNldF9jb29raWUoJ1ZhdXRoZCcsJzAnLGV4cGlyZXNfZGF5cz1Ob25lLGV4cGly\nZXM9Tm9uZSkKICAgIHNlbGYuc2V0VmFsdWUoJ25hbWUnLCAnQW5vbnltb3VzJykKICAgIHNlbGYu\nc2V0VmFsdWUoJ2V4cGlyeXRpbWUnLCBkYXRldGltZS5kYXRldGltZS51dGNub3coKSArIGRhdGV0\naW1lLnRpbWVkZWx0YShkYXlzPTAuMDIxKSkKICAgIHNlbGYuc2V0VmFsdWUoJ3JlcXMnLDEpCgog\nIGRlZiBleHRlbmRzZXNzaW9uKHNlbGYpOgogICAgc2VsZi5zZXRWYWx1ZSgnZXhwaXJ5dGltZScs\nIGRhdGV0aW1lLmRhdGV0aW1lLnV0Y25vdygpICsgZGF0ZXRpbWUudGltZWRlbHRhKGRheXM9c2Vs\nZi5zZXR0aW5nc1snZW1pbnMnXSkpCgogIGRlZiBjbGVhcnNlc3Npb24oc2VsZik6CiAgICBzZWxm\nLmRlbGV0ZVZhbHVlKCduYW1lJykKICAgIHNlbGYuZGVsZXRlVmFsdWUoJ2VtYWlsJykKICAgIHNl\nbGYuZGVsZXRlVmFsdWUoJ2F1dGgnKQogICAgc2VsZi5zZXRfY29va2llKCdWYXV0aGQnLCcwJyxl\neHBpcmVzX2RheXM9Tm9uZSxleHBpcmVzPU5vbmUpCiAgICBzZWxmLnNldF9jb29raWUoJ1Z1c2Vy\nJywnQW5vbnltb3VzJyxleHBpcmVzX2RheXM9Tm9uZSxleHBpcmVzPU5vbmUpCiAgICBnZW5fbG9n\nLmluZm8oJ3Nlc3Npb24gJyArIHNlbGYuc2Vzc2lvbmlkICsgJyBjbGVhcmVkJykKCiAgZGVmIHVz\nZXJfYXV0aGVudGljYXRlZChzZWxmKToKICAgIHNlbGYuc2V0VmFsdWUoJ2F1dGgnLCAndHJ1ZScp\nCiAgICBzZWxmLnNldFZhbHVlKCdyZXFzJywxKQogICAgc2VsZi5zZXRfY29va2llKCdWYXV0aGQn\nLCcxJyxleHBpcmVzX2RheXM9Tm9uZSxleHBpcmVzPU5vbmUpCiAgICBzZWxmLnNldF9jb29raWUo\nJ1Z1c2VyJyxzZWxmLmdldFZhbHVlKCduYW1lJykucmVwbGFjZSgnICcsJ18nKSxleHBpcmVzX2Rh\neXM9Tm9uZSxleHBpcmVzPU5vbmUpCiAgICBzZWxmLmV4dGVuZHNlc3Npb24oKQoKICBAY29yb3V0\naW5lCiAgZGVmIGdldHVzZXJmcm9tZGIoc2VsZik6CiAgICB1ZGIgPSBzZWxmLnNldHRpbmdzWyd1\nc2VyZGInXQogICAgdXNlciA9ICB5aWVsZCB1ZGIudXNlcnMuZmluZF9vbmUoeydlbWFpbCc6IHNl\nbGYuY3VycmVudF91c2VyfSkKICAgIGlmIG5vdCB1c2VyOgogICAgICByZXR1cm4gTm9uZQogICAg\ncmV0dXJuIHVzZXIKCiAgZGVmIGdldGZyb21jYWNoZW9yZGIoc2VsZixrZXkpOgogICAgdmFsdWUg\nPSBzZWxmLmdldFZhbHVlKGtleSkKICAgIGlmIG5vdCB2YWx1ZToKICAgICAgdXNlciA9IHNlbGYu\nZ2V0dXNlcmZyb21kYigpCiAgICAgIGlmIG5vdCB1c2VyIG9yIGtleSBub3QgaW4gdXNlcjoKICAg\nICAgICByZXR1cm4gTm9uZQogICAgICBzZWxmLnNldFZhbHVlKGtleSx1c2VyW2tleV0pCiAgICAg\nIHJldHVybiB1c2VyW2tleV0KICAgIHJldHVybiB2YWx1ZQoKX19hbGxfXyA9IFsgJ0Jhc2VIYW5k\nbGVyJyBdIAo=\n--047d7bdca610703e88051af3370b--","headers":{"Received":["from mail-ie0-f172.google.com (unknown [209.85.223.172]) by ip-10-212-6-2 (Postfix) with ESMTPS id C3EC03806A1 for <919035295469@inbound.edulead.in>; Thu, 16 Jul 2015 00:33:13 +0000 (UTC)","by iecuq6 with SMTP id uq6so45611004iec.2 for <919035295469@inbound.edulead.in>; Wed, 15 Jul 2015 17:33:13 -0700 (PDT)","by 10.79.83.131 with HTTP; Wed, 15 Jul 2015 17:33:12 -0700 (PDT)","by 10.79.83.131 with HTTP; Wed, 15 Jul 2015 17:33:12 -0700 (PDT)"],"Dkim-Signature":"v=1; a=rsa-sha256; c=relaxed\/relaxed; d=gmail.com; s=20120113; h=mime-version:in-reply-to:references:date:message-id:subject:from:to :content-type; bh=TMuIsZEldtreyuew1hRIYPWAPElkuUlGw\/eB+C8HRS0=; b=wJZ\/9QpI9E762tGJoFAnHZrd1cLi+vLL2LGt9zw1P2rQMp4iNmy66MLi9KhOhwYKWn w4TjeOCx7WmXOZm6yWUYg\/R3B6s\/yw7Lt79xeyti0QESazadcq8aT4ONrdGxDprEtmgE jVvVOcIWbxGQiiqIxR8Wxh1KAhpnl1Xeqg58KxnBhmu3n2LDUQFIHEh+L\/6wwr8K2cCl +UEYx91z8V6zv3DH2gzfSa2UhHcxHH3l5AQjTQ0ws6Dz8SmZBeT0VPjI15kxlApPDCjz 4Nxr0i80lQjDwE4vosq7Qy2nJxbUf0gKRvyiIJoTgBZWA\/SJ34GqI+WcNzX1sUDmcT3b Uc2g==","Mime-Version":"1.0","X-Received":"by 10.50.67.179 with SMTP id o19mr826041igt.63.1437006793001; Wed, 15 Jul 2015 17:33:13 -0700 (PDT)","In-Reply-To":"<CABcqZbMZYpZ3-myCeUSudQTkLzm9CP4qorg1bED3rczVtXFkFQ@mail.gmail.com>","References":"<CABcqZbMZYpZ3-myCeUSudQTkLzm9CP4qorg1bED3rczVtXFkFQ@mail.gmail.com>","Date":"Thu, 16 Jul 2015 06:03:12 +0530","Message-Id":"<CABcqZbNTAVUNajwt6NeBChcjyT=aq4JU60ek61qjeRT5-bKEDw@mail.gmail.com>","Subject":"Fwd: Project details","From":"Harish Murthy <harish.v.murthy@gmail.com>","To":"919035295469@inbound.edulead.in","Content-Type":"multipart\/mixed; boundary=047d7bdca610703e88051af3370b"},"text":"---------- Forwarded message ----------\nFrom: \"Harish Murthy\" <harish.v.murthy@gmail.com>\nDate: 14 Jul 2015 09:54\nSubject: Project details\nTo: \"Badari Prasad\" <badari.hp@gmail.com>\nCc:\n\nHi,\n\nYou will need to become familiar with\n\n1. Tornado - tornadoweb.org, pip install tornado\n2. Mandrill - mandrill.com, pip install mandrill\n3. Mongo - mongodb.org,(We use motor package, checkt pypi for details) pip\ninstall motor\n4. Redis - redis.io, (We use redis package), pip install redis\n5. Bootstrap - getbootstrap.com, bootsnipp.com for frontend\n\n\nMandrill account details - needed to configure inbound processing:\n\nusername - vidyatibng@gmail.com\npassword - Em4Projv!d\n\nRedis use is optional, if there is not much processing to be done, we can\ndirectly send using mandrill client\n\nCheck the code attached for starters.\napp.py - main file for server -  this shows how all the different things\ncome together\n__init__.py - this shows sessions management in tornado (may be needed only\nfor signup process)\n\nWe'll discuss further in future.\n\nRegards,\nHarish\n\n","text_flowed":false,"html":"<div class=\"gmail_quote\">---------- Forwarded message ----------<br>From: &quot;Harish Murthy&quot; &lt;<a href=\"mailto:harish.v.murthy@gmail.com\">harish.v.murthy@gmail.com<\/a>&gt;<br>Date: 14 Jul 2015 09:54<br>Subject: Project details<br>To: &quot;Badari Prasad&quot; &lt;<a href=\"mailto:badari.hp@gmail.com\">badari.hp@gmail.com<\/a>&gt;<br>Cc: <br><br type=\"attribution\"><div dir=\"ltr\"><div><div><div><div><div><div><div>Hi,<br><br><\/div>You will need to become familiar with <br><br><\/div>1. Tornado - <a href=\"http:\/\/tornadoweb.org\" target=\"_blank\">tornadoweb.org<\/a>, pip install tornado<br><\/div>2. Mandrill - <a href=\"http:\/\/mandrill.com\" target=\"_blank\">mandrill.com<\/a>, pip install mandrill<br><\/div>3. Mongo - <a href=\"http:\/\/mongodb.org\" target=\"_blank\">mongodb.org<\/a>,(We use motor package, checkt pypi for details) pip install motor<br><\/div>4. Redis - <a href=\"http:\/\/redis.io\" target=\"_blank\">redis.io<\/a>, (We use redis package), pip install redis<br><\/div>5. Bootstrap - <a href=\"http:\/\/getbootstrap.com\" target=\"_blank\">getbootstrap.com<\/a>, <a href=\"http:\/\/bootsnipp.com\" target=\"_blank\">bootsnipp.com<\/a> for frontend<br><br><br><\/div><div>Mandrill account details - needed to configure inbound processing:<br><br><\/div><div>username - <a href=\"mailto:vidyatibng@gmail.com\" target=\"_blank\">vidyatibng@gmail.com<\/a><br><\/div><div>password - Em4Projv!d<br><br><\/div><div><\/div><div>Redis use is optional, if there is not much processing to be done, we can directly send using mandrill client<br><\/div><div><br>Check the code attached for starters.<br><\/div><div>app.py - main file for server -\u00a0 this shows how all the different things come together<br><\/div><div>__init__.py - this shows sessions management in tornado (may be needed only for signup process)<br><br><\/div><div>We&#39;ll discuss further in future.<br><br><\/div><div>Regards,<br><\/div><div>Harish<br><\/div><div><br><\/div><\/div>\n<\/div>\n\n","attachments":{"app.py":{"name":"app.py","type":"text\/x-python","content":"from tornado.ioloop import IOLoop\nfrom tornado.web import authenticated, StaticFileHandler, HTTPError\nfrom tornado.log import logging, gen_log\nfrom tornado_json.routes import get_routes\nfrom tornado_json.application import Application\nfrom tornado_json.gen import coroutine\nfrom tornado.auth import GoogleOAuth2Mixin\nfrom tornado.httpclient import AsyncHTTPClient, HTTPResponse, HTTPRequest\nimport api\nimport json\nimport motor\nimport sys\nimport redis\n\nclass GoogleOAuth2LoginHandler(api.BaseHandler,\n                               GoogleOAuth2Mixin):\n    @coroutine\n    def get(self):\n        if self.get_argument('code', False):\n          user = yield self.get_authenticated_user(\n              redirect_uri='http:\/\/edulead.in\/auth\/google',\n              code=self.get_argument('code'))\n          gen_log.info('google access token ' + user['access_token'])\n          http_client = AsyncHTTPClient()\n          response = yield http_client.fetch('https:\/\/www.googleapis.com\/plus\/v1\/people\/me?access_token='+user['access_token'],raise_error=False)\n          if response.code != 200:\n            gen_log.info('error getting profile ' + str(response))\n            self.redirect('\/signin')\n          resdata = json.loads(response.body.decode())\n          gen_log.info('profile data ' + str(resdata))\n          udb = self.settings['userdb']\n          email = self.getValue('email')\n          if not email or email == \"\":\n            email = resdata['emails'][0]['value']\n          found = False\n          for e in resdata['emails']:\n            if e['value'] == email:\n              found = True\n          if found == False:\n            self.redirect('\/signin')\n          else:\n            self.setValue('email',email)\n          if 'displayName' in resdata:\n            self.setValue('name',resdata['displayName'])\n          user =  yield udb.users.find_one({'useremail': email})\n          if user:\n            gen_log.info('existing user ' + email)\n          else:\n            resdata['useremail'] = email\n            res = yield udb.users.insert(resdata)\n            gen_log.info('new user inserted ' + email)\n          self.user_authenticated()\n          nexturl = self.getValue('nexturl')\n          if not nexturl:\n            nexturl = '\/'\n          self.redirect(nexturl)\n\n\nclass MainHandler(api.BaseHandler):\n  def get(self):\n    self.render(\"index.html\")\n\nclass SearchResultsHandler(api.BaseHandler):\n  def get(self):\n    self.render(\"searchresults_v2.html\")\n\nclass DashBoardHandler(api.BaseHandler):\n  @authenticated\n  def get(self):\n    self.extendsession()\n    self.render(\"dashboard_v2.html\")\n\nclass ProfileHandler(api.BaseHandler):\n  @authenticated\n  def get(self):\n    self.extendsession()\n    self.render(\"customerProfile.html\")\n\nclass SigninHandler(api.BaseHandler,\n                    GoogleOAuth2Mixin):\n  def get(self):\n    self.render(\"signin.html\")\n\n  @coroutine\n  def post(self):\n    grecaptcharesponse = self.get_argument('g-recaptcha-response')\n    email = self.get_argument('email')\n    nexturl = self.get_argument('next','\/')\n    gen_log.info('email ' + email)\n    gen_log.info('captcha response ' + grecaptcharesponse)\n    gen_log.info('next url ' + nexturl)\n    if not grecaptcharesponse:\n      self.redirect('\/signin')\n    remoteip = self.request.headers['X-Real-IP']\n    gen_log.info('remote ip ' + remoteip)\n    http_req = HTTPRequest('https:\/\/www.google.com\/recaptcha\/api\/siteverify','POST',body='secret='+\n                            self.settings['recaptcha_secret']+'&response='+grecaptcharesponse+\n                            '&remoteip='+remoteip)\n    http_client = AsyncHTTPClient()\n    response = yield http_client.fetch(http_req,raise_error=False)\n    if response.code != 200:\n      gen_log.info('error response from captcha ' + str(response))\n      self.redirect('\/signin')\n    resdata = json.loads(response.body.decode())\n    gen_log.info('error response from captcha ' + str(resdata))\n    if resdata['success'] != True:\n      self.redirect('\/signin')\n    self.setValue('email',email)\n    self.setValue('nexturl',nexturl)\n    provider = self.get_argument('login','Google')\n    if provider == 'Google':\n      yield self.authorize_redirect(redirect_uri='http:\/\/edulead.in\/auth\/google',\n                                    client_id=self.settings['google_oauth']['key'],\n                                    scope=['profile', 'email'],\n                                    response_type='code',\n                                    extra_params={'approval_prompt': 'auto', 'login_hint': email})\n    else:\n      self.redirect('\/signin')\n\nclass SignoutHandler(api.BaseHandler):\n  @authenticated\n  def get(self):\n    self.clearsession()\n    self.redirect(\"\/\")\n\nlogging.basicConfig(stream=sys.stdout,level=logging.DEBUG)\n\nclient = motor.MotorClient()\nuserdb = client.userdb\nrclient = redis.StrictRedis()\n\nsettings = {\n  \"login_url\": \"\/signin\",\n  \"recaptcha_secret\": '6LePqgkTAAAAAPMiDlFMrN2o55qrNL4awGexryWm',\n  \"google_oauth\": {\"key\":\"883372115303-6l3ttjaup6p5igbb588v2nkr37i6t2k1.apps.googleusercontent.com\", \"secret\": \"-Q9FTJNb95VSmFwTZLoBMNqT\"},\n  \"facebook_oauth\": {\"key\": \"TBD\"},\n  \"xsrf_cookies\": False,\n  \"cookie_secret\": 'db6734f34db6775e79e3c77b6f7dfa7b9e1b7f87f5eb4dfb',\n  \"emins\": 0.007,\n  \"userdb\": userdb,\n  \"coganlys_app_id\": \"d6487d2498fc49eabe135d0\",\n  \"cognalys_acc_token\": \"3c5f3f4003552ed5ab555fdf33679960fbb9452d\",\n  \"rclient\": rclient,\n  \"anonquota\": 100,\n  \"static_path\": \"..\/..\/frontend\/\",\n  \"template_path\": \"..\/..\/frontend\/html\/\",\n}\n\nroutes = get_routes(api)\n\nroutes = routes + [\n (r\"\/\", MainHandler),\n (r\"\/auth\/google\", GoogleOAuth2LoginHandler),\n (r\"\/searchresults\", SearchResultsHandler),\n (r\"\/dashboard\", DashBoardHandler),\n (r\"\/profile\", ProfileHandler),\n (r\"\/signout\", SignoutHandler),\n (r\"\/signin\", SigninHandler),\n (r\"\/(.*)\", StaticFileHandler,dict(path=settings['static_path'])),\n]\n\napplication = Application(routes=routes, settings=settings)\n\nif __name__ == \"__main__\":\n  application.listen(8984)\n  IOLoop.current().start()\n\n","base64":false},"__init__.py":{"name":"__init__.py","type":"text\/x-python","content":"from tornado.log import gen_log\nfrom tornado.web import RequestHandler, HTTPError\nfrom tornado_json.gen import coroutine\nfrom tornado_json.requesthandlers import APIHandler\nimport datetime\nimport uuid\nimport pickle\n\nclass BaseHandler(RequestHandler):\n  def initialize(self):\n    self.sessionid = None\n\n  def setValue(self,key,value):\n    gen_log.info('set ('+self.sessionid+key+') = '+str(value))\n    rclient = self.settings['rclient']\n    if not rclient:\n      return False\n    return rclient.setex(self.sessionid+key,86400,pickle.dumps(value))\n\n  def getValue(self,key):\n    rclient = self.settings['rclient']\n    if not rclient:\n      return None\n    val = rclient.get(self.sessionid+key)\n    if val:\n      val = pickle.loads(val)\n    gen_log.info('get ('+self.sessionid+key+') = ' + str(val))\n    return val\n\n  def deleteValue(self,key):\n    gen_log.info('delete ('+self.sessionid+key+')')\n    rclient = self.settings['rclient']\n    if not rclient:\n      return None\n    return rclient.delete(self.sessionid+key)\n\n  def get_session_id(self):\n    sessionid = self.get_secure_cookie('Vnote')\n    if sessionid:\n      gen_log.info('set sessionid from cookie')\n      self.sessionid = sessionid.decode()\n      name = self.getValue('name')\n      if not name:\n        self.sessionid = None\n    return self.sessionid\n\n  def get_current_user(self):\n    sessionid = self.get_session_id()\n    if not sessionid:\n      return None\n    auth = self.getValue('auth')\n    if not auth or auth == \"false\":\n      return None\n    email = self.getValue('email')\n    if not email:\n      return None\n    expiry = self.getValue('expirytime')\n    if expiry and datetime.datetime.utcnow() > expiry:\n      return None\n    if not expiry:\n      return None\n    return email\n\n  def prepare(self):\n    sessionid = self.get_session_id()\n    if not sessionid:\n      self.create_anonymous_user()\n      return None\n    if self.get_anonymous_user():\n      reqs = self.getValue('reqs')\n      self.setValue('reqs',reqs+1)\n      return None\n    if not self.current_user:\n      self.clearsession()\n      self.redirect('\/')\n\n  def get_anonymous_user(self):\n    if not self.sessionid:\n      return False\n    name = self.getValue('name')\n    if not name or name != \"Anonymous\":\n      return False\n    expiry = self.getValue('expirytime')\n    if expiry and datetime.datetime.utcnow() > expiry:\n      return False\n    if not expiry:\n      return False\n    reqs = self.getValue('reqs')\n    if reqs and reqs > self.settings['anonquota']:\n      return False\n    if reqs == None:\n      return False\n    return True\n\n  def create_anonymous_user(self):\n    self.sessionid = str(uuid.uuid4())\n    gen_log.info('creating new session ' + self.sessionid)\n    self.set_secure_cookie('Vnote',self.sessionid,expires_days=None,expires=None)\n    self.set_cookie('Vtype','user',expires_days=None,expires=None)\n    self.set_cookie('Vauthd','0',expires_days=None,expires=None)\n    self.setValue('name', 'Anonymous')\n    self.setValue('expirytime', datetime.datetime.utcnow() + datetime.timedelta(days=0.021))\n    self.setValue('reqs',1)\n\n  def extendsession(self):\n    self.setValue('expirytime', datetime.datetime.utcnow() + datetime.timedelta(days=self.settings['emins']))\n\n  def clearsession(self):\n    self.deleteValue('name')\n    self.deleteValue('email')\n    self.deleteValue('auth')\n    self.set_cookie('Vauthd','0',expires_days=None,expires=None)\n    self.set_cookie('Vuser','Anonymous',expires_days=None,expires=None)\n    gen_log.info('session ' + self.sessionid + ' cleared')\n\n  def user_authenticated(self):\n    self.setValue('auth', 'true')\n    self.setValue('reqs',1)\n    self.set_cookie('Vauthd','1',expires_days=None,expires=None)\n    self.set_cookie('Vuser',self.getValue('name').replace(' ','_'),expires_days=None,expires=None)\n    self.extendsession()\n\n  @coroutine\n  def getuserfromdb(self):\n    udb = self.settings['userdb']\n    user =  yield udb.users.find_one({'email': self.current_user})\n    if not user:\n      return None\n    return user\n\n  def getfromcacheordb(self,key):\n    value = self.getValue(key)\n    if not value:\n      user = self.getuserfromdb()\n      if not user or key not in user:\n        return None\n      self.setValue(key,user[key])\n      return user[key]\n    return value\n\n__all__ = [ 'BaseHandler' ] \n","base64":false}},"from_email":"harish.v.murthy@gmail.com","from_name":"Harish Murthy","to":[["919035295469@inbound.edulead.in",null]],"subject":"Fwd: Project details","spf":{"result":"pass","detail":"sender SPF authorized"},"spam_report":{"score":1.8,"matched_rules":[{"name":"RCVD_IN_DNSWL_LOW","score":-0.7,"description":"RBL: Sender listed at http:\/\/www.dnswl.org\/, low"},{"name":null,"score":0,"description":null},{"name":"listed","score":0,"description":"in list.dnswl.org]"},{"name":"URIBL_BLOCKED","score":0,"description":"ADMINISTRATOR NOTICE: The query to URIBL was blocked."},{"name":"more","score":0,"description":"information."},{"name":"googleapis.com]","score":0,"description":null},{"name":"FREEMAIL_FROM","score":0,"description":"Sender email is commonly abused enduser mail provider"},{"name":"URI_HEX","score":1.3,"description":"URI: URI hostname has long hexadecimal sequence"},{"name":"NUMERIC_HTTP_ADDR","score":0,"description":"URI: Uses a numeric IP address in URL"},{"name":"HTML_MESSAGE","score":0,"description":"BODY: HTML included in message"},{"name":"DKIM_VALID_AU","score":-0.1,"description":"Message has a valid DKIM or DK signature from author's"},{"name":"DKIM_SIGNED","score":0.1,"description":"Message has a DKIM or DK signature, not necessarily valid"},{"name":"DKIM_VALID","score":-0.1,"description":"Message has at least one valid DKIM or DK signature"},{"name":"RDNS_NONE","score":1.3,"description":"Delivered to internal network by a host with no rDNS"}]},"dkim":{"signed":true,"valid":true},"email":"919035295469@inbound.edulead.in","tags":[],"sender":null,"template":null}}]
